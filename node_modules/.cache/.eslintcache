[{"/home/nhung/Desktop/fvote/src/index.js":"1","/home/nhung/Desktop/fvote/src/reportWebVitals.js":"2","/home/nhung/Desktop/fvote/src/App.js":"3","/home/nhung/Desktop/fvote/src/topic/index.js":"4","/home/nhung/Desktop/fvote/src/topic/topic.js":"5","/home/nhung/Desktop/fvote/src/topic/create.js":"6","/home/nhung/Desktop/fvote/src/option/create.js":"7","/home/nhung/Desktop/vote/src/index.js":"8","/home/nhung/Desktop/vote/src/App.js":"9","/home/nhung/Desktop/vote/src/reportWebVitals.js":"10","/home/nhung/Desktop/vote/src/topic/create.js":"11","/home/nhung/Desktop/vote/src/topic/topic.js":"12","/home/nhung/Desktop/vote/src/option/create.js":"13","/home/nhung/Desktop/vote/src/poll/create.js":"14"},{"size":623,"mtime":1618740697902,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1618719204834,"results":"17","hashOfConfig":"16"},{"size":815,"mtime":1618807779376,"results":"18","hashOfConfig":"16"},{"size":4574,"mtime":1618719769294,"results":"19","hashOfConfig":"16"},{"size":335,"mtime":1618804763309,"results":"20","hashOfConfig":"16"},{"size":1334,"mtime":1618804742593,"results":"21","hashOfConfig":"16"},{"size":5053,"mtime":1618808562554,"results":"22","hashOfConfig":"16"},{"size":623,"mtime":1618740697902,"results":"23","hashOfConfig":"24"},{"size":908,"mtime":1618909448481,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1618719204834,"results":"26","hashOfConfig":"24"},{"size":1784,"mtime":1618910463805,"results":"27","hashOfConfig":"24"},{"size":335,"mtime":1618804763309,"results":"28","hashOfConfig":"24"},{"size":5701,"mtime":1618911637837,"results":"29","hashOfConfig":"24"},{"size":2784,"mtime":1618912470366,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"13jabc7",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"pikelp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nhung/Desktop/fvote/src/index.js",[],["63","64"],"/home/nhung/Desktop/fvote/src/reportWebVitals.js",[],"/home/nhung/Desktop/fvote/src/App.js",["65","66","67"],"/home/nhung/Desktop/fvote/src/topic/index.js",["68"],"import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nconst EditableContext = React.createContext(null);\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{\n          paddingRight: 24,\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nexport default class EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'name',\n        dataIndex: 'name',\n        width: '30%',\n        editable: true,\n      },\n      {\n        title: 'age',\n        dataIndex: 'age',\n      },\n      {\n        title: 'address',\n        dataIndex: 'address',\n      },\n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (_, record) =>\n          this.state.dataSource.length >= 1 ? (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\n              <a>Delete</a>\n            </Popconfirm>\n          ) : null,\n      },\n    ];\n    this.state = {\n      dataSource: [\n        {\n          key: '0',\n          name: 'Edward King 0',\n          age: '32',\n          address: 'London, Park Lane no. 0',\n        },\n        {\n          key: '1',\n          name: 'Edward King 1',\n          age: '32',\n          address: 'London, Park Lane no. 1',\n        },\n      ],\n      count: 2,\n    };\n  }\n\n  handleDelete = (key) => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({\n      dataSource: dataSource.filter((item) => item.key !== key),\n    });\n  };\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: '32',\n      address: `London, Park Lane no. ${count}`,\n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1,\n    });\n  };\n  handleSave = (row) => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    this.setState({\n      dataSource: newData,\n    });\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    return (\n      <div>\n        <Button\n          onClick={this.handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          Add a row\n        </Button>\n        <Table\n          components={components}\n          rowClassName={() => 'editable-row'}\n          bordered\n          dataSource={dataSource}\n          columns={columns}\n        />\n      </div>\n    );\n  }\n}\n",["69","70"],"/home/nhung/Desktop/fvote/src/topic/topic.js",[],"/home/nhung/Desktop/fvote/src/topic/create.js",[],"/home/nhung/Desktop/fvote/src/option/create.js",["71","72","73"],"/home/nhung/Desktop/vote/src/index.js",[],["74","75"],"/home/nhung/Desktop/vote/src/App.js",[],"/home/nhung/Desktop/vote/src/reportWebVitals.js",[],"/home/nhung/Desktop/vote/src/topic/create.js",["76","77"],"/home/nhung/Desktop/vote/src/topic/topic.js",[],"/home/nhung/Desktop/vote/src/option/create.js",["78","79"],"/home/nhung/Desktop/vote/src/poll/create.js",["80","81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":20,"nodeType":"89","messageId":"90","endLine":4,"endColumn":26},{"ruleId":"87","severity":1,"message":"91","line":9,"column":9,"nodeType":"89","messageId":"90","endLine":9,"endColumn":17},{"ruleId":"87","severity":1,"message":"92","line":10,"column":8,"nodeType":"89","messageId":"90","endLine":10,"endColumn":23},{"ruleId":"93","severity":1,"message":"94","line":109,"column":15,"nodeType":"95","endLine":109,"endColumn":18},{"ruleId":"83","replacedBy":"96"},{"ruleId":"85","replacedBy":"97"},{"ruleId":"87","severity":1,"message":"98","line":4,"column":3,"nodeType":"89","messageId":"90","endLine":4,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":107,"column":15,"nodeType":"95","endLine":107,"endColumn":18},{"ruleId":"87","severity":1,"message":"99","line":150,"column":11,"nodeType":"89","messageId":"90","endLine":150,"endColumn":16},{"ruleId":"83","replacedBy":"100"},{"ruleId":"85","replacedBy":"101"},{"ruleId":"87","severity":1,"message":"102","line":8,"column":9,"nodeType":"89","messageId":"90","endLine":8,"endColumn":15},{"ruleId":"87","severity":1,"message":"103","line":51,"column":13,"nodeType":"89","messageId":"90","endLine":51,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":107,"column":15,"nodeType":"95","endLine":107,"endColumn":18},{"ruleId":"87","severity":1,"message":"99","line":152,"column":11,"nodeType":"89","messageId":"90","endLine":152,"endColumn":16},{"ruleId":"87","severity":1,"message":"104","line":49,"column":17,"nodeType":"89","messageId":"90","endLine":49,"endColumn":25},{"ruleId":"87","severity":1,"message":"105","line":50,"column":17,"nodeType":"89","messageId":"90","endLine":50,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":55,"column":23,"nodeType":"95","endLine":55,"endColumn":26},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'GetTopic' is defined but never used.","'EditableContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["106"],["107"],"'useHistory' is defined but never used.","'state' is assigned a value but never used.",["106"],["107"],"'Search' is assigned a value but never used.","'onSearch' is assigned a value but never used.","'useState' is defined but never used.","'Radio' is defined but never used.","no-global-assign","no-unsafe-negation"]