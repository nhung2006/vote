{"ast":null,"code":"var _jsxFileName = \"/home/nhung/Desktop/vote/src/poll/create.js\";\nimport { Checkbox } from 'antd';\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class CreatePoll extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = checkedValues => {\n      console.log(this.props.location.topicIds);\n      console.log('checked = ', checkedValues);\n    };\n\n    this.plainOptions = ['Apple', 'Pear', 'Orange'];\n    this.options = [{\n      label: 'Apple',\n      value: 'Apple'\n    }, {\n      label: 'Pear',\n      value: 'Pear'\n    }, {\n      label: 'Orange',\n      value: 'Orange'\n    }];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox.Group, {\n        options: plainOptions,\n        onChange: onChange()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n        options: options,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/nhung/Desktop/vote/src/poll/create.js"],"names":["Checkbox","React","axios","CreatePoll","Component","onChange","checkedValues","console","log","props","location","topicIds","plainOptions","options","label","value","render"],"mappings":";AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAEvDC,QAFuD,GAE3CC,aAAD,IAAmB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAhC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,aAA1B;AACH,KALsD;;AAAA,SAOvDM,YAPuD,GAOxC,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAPwC;AAAA,SAqBtDC,OArBsD,GAqB5C,CACT;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KADS,EAET;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAFS,EAGT;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAHS,CArB4C;AAAA;;AA2BvDC,EAAAA,MAAM,GAAE;AACR,wBACE;AAAA,8BACE,QAAC,QAAD,CAAU,KAAV;AAAgB,QAAA,OAAO,EAAEJ,YAAzB;AAAwC,QAAA,QAAQ,EAAEP,QAAQ;AAA1D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,QAAD,CAAU,KAAV;AAAgB,QAAA,OAAO,EAAEQ,OAAzB;AAAkC,QAAA,QAAQ,EAAER;AAA5C;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBADF;AAUK;;AAtCkD","sourcesContent":["import { Checkbox } from 'antd';\nimport React from 'react';\nimport axios from 'axios'\n\nexport default class CreatePoll extends React.Component{\n\nonChange = (checkedValues) => {\n    console.log(this.props.location.topicIds);\n    console.log('checked = ', checkedValues);\n}\n\nplainOptions = ['Apple', 'Pear', 'Orange'];\n// const getPoll = async ()=> {\n//     try {\n//         const response = await axios.get(\"http://localhost:3020/poll\");\n//         if(response){\n//          console.log(response);\n//         }\n//         else{\n            \n//         }\n//     } catch (err) {\n//     console.log(err);\n//     }\n// }\n options = [\n  { label: 'Apple', value: 'Apple' },\n  { label: 'Pear', value: 'Pear' },\n  { label: 'Orange', value: 'Orange' },\n];\n\nrender(){\nreturn (\n  <>\n    <Checkbox.Group options={plainOptions}  onChange={onChange()} />\n    <br />\n    <br />\n    <Checkbox.Group options={options} onChange={onChange} />\n    <br />\n    <br />\n  </>\n    )\n    }\n}"]},"metadata":{},"sourceType":"module"}