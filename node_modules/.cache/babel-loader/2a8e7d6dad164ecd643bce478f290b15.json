{"ast":null,"code":"var _jsxFileName = \"/home/nhung/Desktop/vote/src/poll/create.js\";\n// import { Checkbox } from 'antd';\n// import React from 'react';\n// import axios from 'axios'\n// const signIn = async (props) => {\n//     const topicId = this.props.location.state\n//     try {\n//         const urlOption = `http://localhost:3020/option/`+this.topicId\n//         const urlTopic = `http://localhost:3020/topic/`+this.topicId\n//         const responseOption = await axios.get(urlOption)\n//         return <h1>{responseOption.data[0].content}</h1>;\n//         // const responseTopic = await axios.get(urlTopic)\n//         // console.log(responseTopic.data.content);\n//     } catch (err) {\n//     console.log(err);\n//     }\n// };\n// export default class CreatePoll extends React.Component{\n//     onChange = (checkedValues) => {\n//         console.log('checked = ', checkedValues);\n//     }\n//     render(){\n//         const a= <this.signIn></this.signIn>\n//         console.log(a);\n//         const options = [\n//             // { label: a, value: a },\n//             { label: 'Pear', value: 'Pear' },\n//             { label: 'Orange', value: 'Orange' },\n//         ];\n//         return (\n//             <>\n//                 <br />\n//                 <br />\n//                 <Checkbox.Group options={options} className='option' onChange={this.onChange} />\n//                 <br />\n//                 <br />\n//             </>\n//         )\n//     }\n// }\nimport React, { useState } from 'react';\nimport { Table, Radio, Divider } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this)\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Disabled User',\n  age: 99,\n  address: 'Sidney No. 1 Lake Park'\n}]; // rowSelection object indicates the need for row selection\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\nexport default class CreatePoll extends React.Component {\n  render() {\n    const [selectionType, setSelectionType] = useState('checkbox');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Radio.Group, {\n        onChange: ({\n          target: {\n            value\n          }\n        }) => {\n          setSelectionType(value);\n        },\n        value: selectionType,\n        children: [/*#__PURE__*/_jsxDEV(Radio, {\n          value: \"checkbox\",\n          children: \"Checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n          value: \"radio\",\n          children: \"radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        rowSelection: {\n          type: selectionType,\n          ...rowSelection\n        },\n        columns: columns,\n        dataSource: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/nhung/Desktop/vote/src/poll/create.js"],"names":["React","useState","Table","Radio","Divider","columns","title","dataIndex","render","text","data","key","name","age","address","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","CreatePoll","Component","selectionType","setSelectionType","target","value","type"],"mappings":"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","sourcesContent":["// import { Checkbox } from 'antd';\n// import React from 'react';\n// import axios from 'axios'\n\n// const signIn = async (props) => {\n//     const topicId = this.props.location.state\n\n//     try {\n//         const urlOption = `http://localhost:3020/option/`+this.topicId\n\n//         const urlTopic = `http://localhost:3020/topic/`+this.topicId\n//         const responseOption = await axios.get(urlOption)\n//         return <h1>{responseOption.data[0].content}</h1>;\n//         // const responseTopic = await axios.get(urlTopic)\n//         // console.log(responseTopic.data.content);\n        \n//     } catch (err) {\n//     console.log(err);\n//     }\n// };\n// export default class CreatePoll extends React.Component{\n\n//     onChange = (checkedValues) => {\n//         console.log('checked = ', checkedValues);\n//     }\n   \n\n\n//     render(){\n//         const a= <this.signIn></this.signIn>\n//         console.log(a);\n//         const options = [\n//             // { label: a, value: a },\n//             { label: 'Pear', value: 'Pear' },\n//             { label: 'Orange', value: 'Orange' },\n//         ];\n//         return (\n//             <>\n//                 <br />\n//                 <br />\n//                 <Checkbox.Group options={options} className='option' onChange={this.onChange} />\n//                 <br />\n//                 <br />\n//             </>\n//         )\n//     }\n// }\n\nimport React, { useState } from 'react';\nimport { Table, Radio, Divider } from 'antd';\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Disabled User',\n    age: 99,\n    address: 'Sidney No. 1 Lake Park',\n  },\n]; // rowSelection object indicates the need for row selection\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name,\n  }),\n};\nexport default class CreatePoll extends React.Component{\n\nrender(){\n  const [selectionType, setSelectionType] = useState('checkbox');\n  return (\n    <div>\n      <Radio.Group\n        onChange={({ target: { value } }) => {\n          setSelectionType(value);\n        }}\n        value={selectionType}\n      >\n        <Radio value=\"checkbox\">Checkbox</Radio>\n        <Radio value=\"radio\">radio</Radio>\n      </Radio.Group>\n\n      <Divider />\n\n      <Table\n        rowSelection={{\n          type: selectionType,\n          ...rowSelection,\n        }}\n        columns={columns}\n        dataSource={data}\n      />\n    </div>\n  );\n};\n}"]},"metadata":{},"sourceType":"module"}