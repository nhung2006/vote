{"ast":null,"code":"var _jsxFileName = \"/home/nhung/Desktop/fvote/src/option/create.js\";\nimport { Table, Input, Icon, Button, Popconfirm } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value,\n      editable: false\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      this.setState({\n        value\n      });\n    };\n\n    this.check = () => {\n      this.setState({\n        editable: false\n      });\n\n      if (this.props.onChange) {\n        this.props.onChange(this.state.value);\n      }\n    };\n\n    this.edit = () => {\n      this.setState({\n        editable: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      value,\n      editable\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell\",\n      children: editable ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editable-cell-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: value,\n          onChange: this.handleChange,\n          onPressEnter: this.check\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          type: \"check\",\n          className: \"editable-cell-icon-check\",\n          onClick: this.check\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editable-cell-text-wrapper\",\n        children: [value || ' ', /*#__PURE__*/_jsxDEV(Icon, {\n          type: \"edit\",\n          className: \"editable-cell-icon\",\n          onClick: this.edit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCellChange = (key, dataIndex) => {\n      return value => {\n        const dataSource = [...this.state.dataSource];\n        const target = dataSource.find(item => item.key === key);\n\n        if (target) {\n          target[dataIndex] = value;\n          this.setState({\n            dataSource\n          });\n        }\n      };\n    };\n\n    this.onDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        count,\n        dataSource\n      } = this.state;\n      const newData = {\n        key: count,\n        name: `Edward King ${count}`,\n        age: 32,\n        address: `London, Park Lane no. ${count}`\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n      render: (text, record) => /*#__PURE__*/_jsxDEV(EditableCell, {\n        value: text,\n        onChange: this.onCellChange(record.key, 'name')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, {\n      title: 'age',\n      dataIndex: 'age'\n    }, {\n      title: 'address',\n      dataIndex: 'address'\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        return this.state.dataSource.length > 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to delete?\",\n          onConfirm: () => this.onDelete(record.key),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : null;\n      }\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        name: 'Edward King 0',\n        age: '32',\n        address: 'London, Park Lane no. 0'\n      }, {\n        key: '1',\n        name: 'Edward King 1',\n        age: '32',\n        address: 'London, Park Lane no. 1'\n      }],\n      count: 2\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const columns = this.columns;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"editable-add-btn\",\n        onClick: this.handleAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        dataSource: dataSource,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/nhung/Desktop/fvote/src/option/create.js"],"names":["Table","Input","Icon","Button","Popconfirm","EditableCell","React","Component","state","value","props","editable","handleChange","e","target","setState","check","onChange","edit","render","EditableTable","constructor","onCellChange","key","dataIndex","dataSource","find","item","onDelete","filter","handleAdd","count","newData","name","age","address","columns","title","width","text","record","length"],"mappings":"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","sourcesContent":["import { Table, Input, Icon, Button, Popconfirm } from 'antd';\n\nclass EditableCell extends React.Component {\n  state = {\n    value: this.props.value,\n    editable: false,\n  }\n  handleChange = (e) => {\n    const value = e.target.value;\n    this.setState({ value });\n  }\n  check = () => {\n    this.setState({ editable: false });\n    if (this.props.onChange) {\n      this.props.onChange(this.state.value);\n    }\n  }\n  edit = () => {\n    this.setState({ editable: true });\n  }\n  render() {\n    const { value, editable } = this.state;\n    return (\n      <div className=\"editable-cell\">\n        {\n          editable ?\n            <div className=\"editable-cell-input-wrapper\">\n              <Input\n                value={value}\n                onChange={this.handleChange}\n                onPressEnter={this.check}\n              />\n              <Icon\n                type=\"check\"\n                className=\"editable-cell-icon-check\"\n                onClick={this.check}\n              />\n            </div>\n            :\n            <div className=\"editable-cell-text-wrapper\">\n              {value || ' '}\n              <Icon\n                type=\"edit\"\n                className=\"editable-cell-icon\"\n                onClick={this.edit}\n              />\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n      render: (text, record) => (\n        <EditableCell\n          value={text}\n          onChange={this.onCellChange(record.key, 'name')}\n        />\n      ),\n    }, {\n      title: 'age',\n      dataIndex: 'age',\n    }, {\n      title: 'address',\n      dataIndex: 'address',\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        return (\n          this.state.dataSource.length > 1 ?\n          (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.onDelete(record.key)}>\n              <a href=\"#\">Delete</a>\n            </Popconfirm>\n          ) : null\n        );\n      },\n    }];\n\n    this.state = {\n      dataSource: [{\n        key: '0',\n        name: 'Edward King 0',\n        age: '32',\n        address: 'London, Park Lane no. 0',\n      }, {\n        key: '1',\n        name: 'Edward King 1',\n        age: '32',\n        address: 'London, Park Lane no. 1',\n      }],\n      count: 2,\n    };\n  }\n  onCellChange = (key, dataIndex) => {\n    return (value) => {\n      const dataSource = [...this.state.dataSource];\n      const target = dataSource.find(item => item.key === key);\n      if (target) {\n        target[dataIndex] = value;\n        this.setState({ dataSource });\n      }\n    };\n  }\n  onDelete = (key) => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n  }\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: 32,\n      address: `London, Park Lane no. ${count}`,\n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1,\n    });\n  }\n  render() {\n    const { dataSource } = this.state;\n    const columns = this.columns;\n    return (\n      <div>\n        <Button className=\"editable-add-btn\" onClick={this.handleAdd}>Add</Button>\n        <Table bordered dataSource={dataSource} columns={columns} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}