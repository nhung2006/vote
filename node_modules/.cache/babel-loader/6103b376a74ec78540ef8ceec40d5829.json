{"ast":null,"code":"var _jsxFileName = \"/home/nhung/Desktop/vote/src/option/create.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableContext = /*#__PURE__*/React.createContext(null);\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(EditableContext.Provider, {\n      value: form,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableRow, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EditableRow;\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  _s2();\n\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title} is required.`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c2 = EditableCell;\nexport default class CreateOption extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        count,\n        dataSource\n      } = this.state;\n      const newData = {\n        key: count,\n        content: `add option ${count}`\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.handleSaveOption = async event => {\n      const a = this.props.location.state; // console.log(this.props.location.state);\n\n      const state = {\n        redirect: false\n      };\n      event.preventDefault();\n      const dataSource = [...this.state.dataSource];\n\n      for (let i = 0; i < dataSource.length; i++) {\n        const user = {\n          topicId: a,\n          content: dataSource[i].content\n        };\n\n        try {\n          const response = await axios.post(\"http://localhost:3020/option\", user);\n\n          if (response) {\n            this.setState({\n              redirect: true\n            });\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    this.columns = [{\n      title: 'Option',\n      dataIndex: 'content',\n      width: '30%',\n      editable: true\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (_, record) => this.state.dataSource.length >= 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => this.handleDelete(record.key),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : null\n    }];\n    this.state = {\n      dataSource: [],\n      count: 1\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const {\n      redirect\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n\n    if (redirect) {\n      console.log(dataSource);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/poll',\n          state: dataSource\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleAdd,\n          type: \"primary\",\n          style: {\n            marginBottom: 16\n          },\n          children: \"Add a row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          components: components,\n          rowClassName: () => 'editable-row',\n          bordered: true,\n          dataSource: dataSource,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleSaveOption,\n          type: \"primary\",\n          children: \"Poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableRow\");\n$RefreshReg$(_c2, \"EditableCell\");","map":{"version":3,"sources":["/home/nhung/Desktop/vote/src/option/create.js"],"names":["React","useContext","useState","useEffect","useRef","Redirect","Table","Input","Button","Popconfirm","Form","axios","EditableContext","createContext","EditableRow","index","props","form","useForm","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","CreateOption","Component","constructor","handleDelete","key","dataSource","state","setState","filter","item","handleAdd","count","newData","content","row","findIndex","splice","handleSaveOption","event","a","location","redirect","preventDefault","i","length","user","topicId","response","post","err","columns","width","render","_","components","body","cell","map","col","onCell","pathname","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\nimport {\n  Redirect,\n} from \"react-router-dom\";\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport axios from 'axios';\nconst EditableContext = React.createContext(null);\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{\n          paddingRight: 24,\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nexport default class CreateOption extends React.Component {\n  \n  constructor(props) {\n    \n    super(props);\n    this.columns = [\n      {\n        title: 'Option',\n        dataIndex: 'content',\n        width: '30%',\n        editable: true,\n      },\n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (_, record) =>\n          this.state.dataSource.length >= 1 ? (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\n              <a>Delete</a>\n            </Popconfirm>\n          ) : null,\n      },\n    ];\n    this.state = {\n      dataSource: [\n\n      ],\n      count: 1,\n    };\n  }\n\n  handleDelete = (key) => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({\n      dataSource: dataSource.filter((item) => item.key !== key),\n    });\n  };\n\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      content: `add option ${count}`,\n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1,\n    });\n  };\n\n  handleSave = (row) => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    this.setState({\n      dataSource: newData,\n    });\n  };\n\n  handleSaveOption = async event => {\n    const a = this.props.location.state\n    // console.log(this.props.location.state);\n    const state = {\n      redirect: false\n    }\n    event.preventDefault();\n    const dataSource = [...this.state.dataSource];\n    \n    for (let i = 0; i < dataSource.length; i++) {\n      const user = {\n        topicId: a,\n        content: dataSource[i].content\n      };\n      try {\n        const response = await axios.post(\"http://localhost:3020/option\", user);\n        if(response){\n          this.setState({redirect: true})\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n  }\n\n  render() {\n    const { dataSource } = this.state;\n    const { redirect } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    \n    if (redirect) {\n      console.log(dataSource);\n      return <Redirect to={{pathname : '/poll', state: dataSource}} />;\n    }else{\n      return (\n        \n        <div>\n          <Button\n            onClick={this.handleAdd}\n            type=\"primary\"\n            style={{\n              marginBottom: 16,\n            }}\n          >\n            Add a row\n          </Button>\n          <Table\n            components={components}\n            rowClassName={() => 'editable-row'}\n            bordered\n            dataSource={dataSource}\n            columns={columns}\n          />\n          <Button\n            onClick={this.handleSaveOption}\n            type=\"primary\"\n          >\n            Poll\n          </Button>\n          \n        </div>\n      );\n      \n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}