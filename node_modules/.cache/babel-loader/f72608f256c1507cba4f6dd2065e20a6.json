{"ast":null,"code":"var _jsxFileName = \"/home/nhung/Desktop/vote/src/poll/create.js\";\nimport { Checkbox } from 'antd';\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction onChange(checkedValues) {\n  console.log('checked = ', checkedValues);\n}\n\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\n\nconst getPoll = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:3020/poll\");\n\n    if (response) {\n      const id = response.data[0].id;\n      history.push({\n        pathname: \"/create-option\",\n        state: id\n      });\n    } else {\n      history.push(\"/create-topic\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst options = [{\n  label: 'Apple',\n  value: 'Apple'\n}, {\n  label: 'Pear',\n  value: 'Pear'\n}, {\n  label: 'Orange',\n  value: 'Orange'\n}];\nexport default class CreatePoll extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox.Group, {\n        options: plainOptions,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n        options: options,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/nhung/Desktop/vote/src/poll/create.js"],"names":["Checkbox","React","axios","onChange","checkedValues","console","log","plainOptions","getPoll","response","get","id","data","history","push","pathname","state","err","options","label","value","CreatePoll","Component","render"],"mappings":";AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,aAA1B;AACD;;AAED,MAAMG,YAAY,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAArB;;AACA,MAAMC,OAAO,GAAG,YAAW;AACvB,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,4BAAV,CAAvB;;AACA,QAAGD,QAAH,EAAY;AACV,YAAME,EAAE,GAAIF,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBD,EAA7B;AACCE,MAAAA,OAAO,CAACC,IAAR,CAAa;AAACC,QAAAA,QAAQ,EAAE,gBAAX;AAA6BC,QAAAA,KAAK,EAAEL;AAApC,OAAb,CAAD;AACD,KAHD,MAII;AACAE,MAAAA,OAAO,CAACC,IAAR,CAAa,eAAb;AACH;AACJ,GATD,CASE,OAAOG,GAAP,EAAY;AACdZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACC;AACJ,CAbD;;AAcA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHc,CAAhB;AAOA,eAAe,MAAMC,UAAN,SAAyBpB,KAAK,CAACqB,SAA/B,CAAwC;AACvDC,EAAAA,MAAM,GAAE;AACR,wBACE;AAAA,8BACE,QAAC,QAAD,CAAU,KAAV;AAAgB,QAAA,OAAO,EAAEhB,YAAzB;AAAwC,QAAA,QAAQ,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,QAAD,CAAU,KAAV;AAAgB,QAAA,OAAO,EAAEe,OAAzB;AAAkC,QAAA,QAAQ,EAAEf;AAA5C;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBADF;AAUK;;AAZkD","sourcesContent":["import { Checkbox } from 'antd';\nimport React from 'react';\nimport axios from 'axios'\n\nfunction onChange(checkedValues) {\n  console.log('checked = ', checkedValues);\n}\n\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst getPoll = async ()=> {\n    try {\n        const response = await axios.get(\"http://localhost:3020/poll\");\n        if(response){\n          const id = (response.data[0].id);\n          (history.push({pathname: \"/create-option\", state: id}));\n        }\n        else{\n            history.push(\"/create-topic\")\n        }\n    } catch (err) {\n    console.log(err);\n    }\n}\nconst options = [\n  { label: 'Apple', value: 'Apple' },\n  { label: 'Pear', value: 'Pear' },\n  { label: 'Orange', value: 'Orange' },\n];\n\n\nexport default class CreatePoll extends React.Component{\nrender(){\nreturn (\n  <>\n    <Checkbox.Group options={plainOptions}  onChange={onChange} />\n    <br />\n    <br />\n    <Checkbox.Group options={options} onChange={onChange} />\n    <br />\n    <br />\n  </>\n    )\n    }\n}"]},"metadata":{},"sourceType":"module"}